use serde::{Serialize, Deserialize};
use crate::params::*;

#[derive(Serialize, Deserialize, Debug)]
#[repr(u32)]
pub enum RequestParams {
    CreateSession(session::RequestCreateSessionParams),
    DeleteSession,
    RestoreSession(session::RequestRestoreSessionParams),
    DebugCommand,
    ServerPing,
    CheckAlive,
    GetAnnounceMessageList(announcement::RequestGetAnnounceMessageListParams),
    CreateSign(sign::RequestCreateSignParams),
    CreateMatchAreaSign,
    UpdateSign(sign::RequestUpdateSignParams),
    GetSignList(sign::RequestGetSignListParams),
    GetMatchAreaSignList,
    RemoveSign(sign::RequestRemoveSignParams),
    SummonSign(sign::RequestSummonSignParams),
    RejectSign(sign::RequestRejectSignParams),
    CreateBloodMessage(bloodmessage::RequestCreateBloodMessageParams),
    RemoveBloodMessage(bloodmessage::RequestRemoveBloodMessageParams),
    ReentryBloodMessage(bloodmessage::RequestReentryBloodMessageParams),
    GetBloodMessageList(bloodmessage::RequestGetBloodMessageListParams),
    EvaluateBloodMessage(bloodmessage::RequestEvaluateBloodMessageParams),
    GetBloodMessageDetail, // Never seen this being sent
    CreateBloodstain(bloodstain::RequestCreateBloodstainParams),
    GetBloodstainList(bloodstain::RequestGetBloodstainListParams),
    GetDeadingGhost(bloodstain::RequestGetDeadingGhostParams),
    CreateGhostData(ghostdata::RequestCreateGhostDataParams),
    GetGhostDataList(ghostdata::RequestGetGhostDataListParams),
    UpdateLoginPlayerCharacter,
    UpdatePlayerStatus(player::RequestUpdatePlayerStatusParams),
    BreakInTarget(breakin::RequestBreakInTargetParams),
    GetBreakInTargetList(breakin::RequestGetBreakInTargetListParams),
    RejectBreakInTarget,
    AllowBreakInTarget(breakin::RequestAllowBreakInTargetParams),
    Visit,
    GetVisitorList,
    RejectVisit,
    NotifyAreaEvent,
    JoinMultiplay,
    LeaveMultiplay,
    GetMatchDensity,
    GetPlayZoneIdList,
    RegisterCharacterLog,
    SelectCharacterLog,
    DieLog,
    UseMagicLog,
    UseGestureLog,
    UseItemLog(player::RequestUseItemLogParams),
    PurchaseItemLog,
    GetItemLog(player::RequestGetItemLogParams),
    DropItemLog,
    LeaveItemLog,
    SaleItemLog,
    CreateItemLog,
    SummonBuddyLog,
    KillEnemyLog(player::RequestKillEnemyLogParams),
    KillBossLog,
    GlobalEventLog,
    DiscoverMapPointLog,
    JoinMultiplayLog,
    LeaveMultiplayLog,
    CreateSignResultLog,
    SummonSignResultLog,
    BreakInResultLog,
    VisitResultLog,
    QuickMatchResultLog,
    QuickMatchEndLog,
    SystemOptionLog,
    SearchQuickMatch(quickmatch::RequestSearchQuickMatchParams),
    RegisterQuickMatch(quickmatch::RequestRegisterQuickMatchParams),
    UnregisterQuickMatch,
    UpdateQuickMatch,
    JoinQuickMatch(quickmatch::RequestJoinQuickMatchParams),
    AcceptQuickMatch(quickmatch::RequestAcceptQuickMatchParams),
    RejectQuickMatch,
    GrUploadPlayerEquipments,
    GrGetPlayerEquipments(player_equipments::RequestGrGetPlayerEquipmentsParams),
    CreateMatchingTicket(matchingticket::RequestCreateMatchingTicketParams),
    // Seemingly completely unused
    PollMatchingTicket,
    DeleteMatchingTicket,
    CreateBattleSession,
    CreateRoom,
    UpdateRoom,
    DeleteRoom,
    GetRoom,
    GetRoomList,
    RegisterUGC,
    GetUGCSNSCodeList,
    GetUGC,
    DeleteUGC,
    // Not sure if these are used
    SendQuickMatchStart,
    SendQuickMatchResult,
}

impl RequestParams {
    pub fn name(&self) -> &'static str {
        match self {
            Self::CreateSession(_) => "CreateSession",
            Self::DeleteSession => "DeleteSession",
            Self::RestoreSession(_) => "RestoreSession",
            Self::DebugCommand => "DebugCommand",
            Self::ServerPing => "ServerPing",
            Self::CheckAlive => "CheckAlive",
            Self::GetAnnounceMessageList(_) => "GetAnnounceMessageList",
            Self::CreateSign(_) => "CreateSign",
            Self::CreateMatchAreaSign => "CreateMatchAreaSign",
            Self::UpdateSign(_) => "UpdateSign",
            Self::GetSignList(_) => "GetSignList",
            Self::GetMatchAreaSignList => "GetMatchAreaSignList",
            Self::RemoveSign(_) => "RemoveSign",
            Self::SummonSign(_) => "SummonSign",
            Self::RejectSign(_) => "RejectSign",
            Self::CreateBloodMessage(_) => "CreateBloodMessage",
            Self::RemoveBloodMessage(_) => "RemoveBloodMessage",
            Self::ReentryBloodMessage(_) => "ReentryBloodMessage",
            Self::GetBloodMessageList(_) => "GetBloodMessageList",
            Self::EvaluateBloodMessage(_) => "EvaluateBloodMessage",
            Self::GetBloodMessageDetail => "GetBloodMessageDetail",
            Self::CreateBloodstain(_) => "CreateBloodstain",
            Self::GetBloodstainList(_) => "GetBloodstainList",
            Self::GetDeadingGhost(_) => "GetDeadingGhost",
            Self::CreateGhostData(_) => "CreateGhostData",
            Self::GetGhostDataList(_) => "GetGhostDataList",
            Self::UpdateLoginPlayerCharacter => "UpdateLoginPlayerCharacter",
            Self::UpdatePlayerStatus(_) => "UpdatePlayerStatus",
            Self::BreakInTarget(_) => "BreakInTarget",
            Self::GetBreakInTargetList(_) => "GetBreakInTargetList",
            Self::RejectBreakInTarget => "RejectBreakInTarget",
            Self::AllowBreakInTarget(_) => "AllowBreakInTarget",
            Self::Visit => "Visit",
            Self::GetVisitorList => "GetVisitorList",
            Self::RejectVisit => "RejectVisit",
            Self::NotifyAreaEvent => "NotifyAreaEvent",
            Self::JoinMultiplay => "JoinMultiplay",
            Self::LeaveMultiplay => "LeaveMultiplay",
            Self::GetMatchDensity => "GetMatchDensity",
            Self::GetPlayZoneIdList => "GetPlayZoneIdList",
            Self::RegisterCharacterLog => "RegisterCharacterLog",
            Self::SelectCharacterLog => "SelectCharacterLog",
            Self::DieLog => "DieLog",
            Self::UseMagicLog => "UseMagicLog",
            Self::UseGestureLog => "UseGestureLog",
            Self::UseItemLog(_) => "UseItemLog",
            Self::PurchaseItemLog => "PurchaseItemLog",
            Self::GetItemLog(_) => "GetItemLog",
            Self::DropItemLog => "DropItemLog",
            Self::LeaveItemLog => "LeaveItemLog",
            Self::SaleItemLog => "SaleItemLog",
            Self::CreateItemLog => "CreateItemLog",
            Self::SummonBuddyLog => "SummonBuddyLog",
            Self::KillEnemyLog(_) => "KillEnemyLog",
            Self::KillBossLog => "KillBossLog",
            Self::GlobalEventLog => "GlobalEventLog",
            Self::DiscoverMapPointLog => "DiscoverMapPointLog",
            Self::JoinMultiplayLog => "JoinMultiplayLog",
            Self::LeaveMultiplayLog => "LeaveMultiplayLog",
            Self::CreateSignResultLog => "CreateSignResultLog",
            Self::SummonSignResultLog => "SummonSignResultLog",
            Self::BreakInResultLog => "BreakInResultLog",
            Self::VisitResultLog => "VisitResultLog",
            Self::QuickMatchResultLog => "QuickMatchResultLog",
            Self::QuickMatchEndLog => "QuickMatchEndLog",
            Self::SystemOptionLog => "SystemOptionLog",
            Self::SearchQuickMatch(_) => "SearchQuickMatch",
            Self::RegisterQuickMatch(_) => "RegisterQuickMatch",
            Self::UnregisterQuickMatch => "UnregisterQuickMatch",
            Self::UpdateQuickMatch => "UpdateQuickMatch",
            Self::JoinQuickMatch(_) => "JoinQuickMatch",
            Self::AcceptQuickMatch(_) => "AcceptQuickMatch",
            Self::RejectQuickMatch => "RejectQuickMatch",
            Self::GrUploadPlayerEquipments => "GrUploadPlayerEquipments",
            Self::GrGetPlayerEquipments(_) => "GrGetPlayerEquipments",
            Self::CreateMatchingTicket(_) => "CreateMatchingTicket",
            Self::PollMatchingTicket => "PollMatchingTicket",
            Self::DeleteMatchingTicket => "DeleteMatchingTicket",
            Self::CreateBattleSession => "CreateBattleSession",
            Self::CreateRoom => "CreateRoom",
            Self::UpdateRoom => "UpdateRoom",
            Self::DeleteRoom => "DeleteRoom",
            Self::GetRoom => "GetRoom",
            Self::GetRoomList => "GetRoomList",
            Self::RegisterUGC => "RegisterUGC",
            Self::GetUGCSNSCodeList => "GetUGCSNSCodeList",
            Self::GetUGC => "GetUGC",
            Self::DeleteUGC => "DeleteUGC",
            Self::SendQuickMatchStart => "SendQuickMatchStart",
            Self::SendQuickMatchResult => "SendQuickMatchResult",
        }
    }
}
