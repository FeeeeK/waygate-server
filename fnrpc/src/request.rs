use serde::{Serialize, Deserialize};
use crate::params::*;

#[derive(Serialize, Deserialize, Debug)]
#[repr(u32)]
pub enum RequestParams {
    CreateSession(session::RequestCreateSessionParams),
    DeleteSession,
    RestoreSession(session::RequestRestoreSessionParams),
    DebugCommand,
    ServerPing,
    CheckAlive,
    GetAnnounceMessageList(announcement::RequestGetAnnounceMessageListParams),
    CreateSign(sign::RequestCreateSignParams),
    CreateMatchAreaSign,
    UpdateSign(sign::RequestUpdateSignParams),
    GetSignList(sign::RequestGetSignListParams),
    GetMatchAreaSignList,
    RemoveSign(sign::RequestRemoveSignParams),
    SummonSign(sign::RequestSummonSignParams),
    RejectSign(sign::RequestRejectSignParams),
    CreateBloodMessage(bloodmessage::RequestCreateBloodMessageParams),
    RemoveBloodMessage,
    ReentryBloodMessage,
    GetBloodMessageList(bloodmessage::RequestGetBloodMessageListParams),
    EvaluateBloodMessage(bloodmessage::RequestEvaluateBloodMessageParams),
    GetBloodMessageDetail,
    CreateBloodstain(bloodstain::RequestCreateBloodstainParams),
    GetBloodstainList(bloodstain::RequestGetBloodstainListParams),
    GetDeadingGhost(bloodstain::RequestGetDeadingGhostParams),
    CreateGhostData(ghostdata::RequestCreateGhostDataParams),
    GetGhostDataList(ghostdata::RequestGetGhostDataListParams),
    UpdateLoginPlayerCharacter,
    UpdatePlayerStatus(player::RequestUpdatePlayerStatusParams),
    BreakInTarget(breakin::RequestBreakInTargetParams),
    GetBreakInTargetList(breakin::RequestGetBreakInTargetListParams),
    RejectBreakInTarget,
    AllowBreakInTarget(breakin::RequestAllowBreakInTargetParams),
    Visit,
    GetVisitorList,
    RejectVisit,
    NotifyAreaEvent,
    JoinMultiplay,
    LeaveMultiplay,
    GetMatchDensity,
    GetPlayZoneIdList,
    RegisterCharacterLog,
    SelectCharacterLog,
    DieLog,
    UseMagicLog,
    UseGestureLog,
    UseItemLog,
    PurchaseItemLog,
    GetItemLog,
    DropItemLog,
    LeaveItemLog,
    SaleItemLog,
    CreateItemLog,
    SummonBuddyLog,
    KillEnemyLog,
    KillBossLog,
    GlobalEventLog,
    DiscoverMapPointLog,
    JoinMultiplayLog,
    LeaveMultiplayLog,
    CreateSignResultLog,
    SummonSignResultLog,
    BreakInResultLog,
    VisitResultLog,
    QuickMatchResultLog,
    QuickMatchEndLog,
    SystemOptionLog,
    SearchQuickMatch(quickmatch::RequestSearchQuickMatchParams),
    RegisterQuickMatch(quickmatch::RequestRegisterQuickMatchParams),
    UnregisterQuickMatch,
    UpdateQuickMatch,
    JoinQuickMatch(quickmatch::RequestJoinQuickMatchParams),
    AcceptQuickMatch(quickmatch::RequestAcceptQuickMatchParams),
    RejectQuickMatch,
    GrUploadPlayerEquipments,
    GrGetPlayerEquipments(player_equipments::RequestGrGetPlayerEquipmentsParams),
    CreateMatchingTicket,
    PollMatchingTicket,
    DeleteMatchingTicket,
    CreateBattleSession,
    CreateRoom,
    UpdateRoom,
    DeleteRoom,
    GetRoom,
    GetRoomList,
    RegisterUGC,
    GetUGCSNSCodeList,
    GetUGC,
    DeleteUGC,
    SendQuickMatchStart,
    SendQuickMatchResult,
}
