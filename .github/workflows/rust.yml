name: Server build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Build
      run: cargo build --release

    - name: Run tests
      run: cargo test

    - name: Prepare artifact files
      run: |
        mkdir -p artifacts
        find . -name waygate-server -exec cp {} artifacts/ \;
        find . -name generate-keys -exec cp {} artifacts/ \;
        find . -name waygate-server.exe -exec cp {} artifacts/ \;
        find . -name generate-keys.exe -exec cp {} artifacts/ \;
        find . -name libsteam_api.so -exec cp {} artifacts/ \;
        find . -name steam_api64.dll -exec cp {} artifacts/ \;
        cp config.toml artifacts/
        cp logging.toml artifacts/
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: waygate-server-${{ matrix.os }}
        path: artifacts/
